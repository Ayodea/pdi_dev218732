<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>AzureAdAyan</name>
        <operation_script><![CDATA[(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    this.status = '200';
    var respObj = {}; //declare the response object
    var payload = request.body.data; //retrieving the JSON body
    // var number = payload.number; //getting the  number from JSON
    // var callerid = payload.callerid;
    // var state = payload.state;
    // var category = payload.category;
    // var impact = payload.impact;
    // var urgency = payload.urgency;
    // var short_description = payload.short_description;
    // var description = payload.description;
    var groupname = payload.groupname;
    var scop = payload.scop;
    var domainname = payload.domainname;
    var productname = payload.productname;



    // var grinc = new GlideRecord("incident");
    // grinc.addQuery("number", number);
    // grinc.query();
    // if (grinc.next()) { // To update data on the existing incidents

    //     grinc.caller_id = callerid;
    //     grinc.state = state;
    //     grinc.category = category;
    //     grinc.impact = impact;
    //     grinc.urgency = urgency;
    //     grinc.short_description = short_description;
    //     grinc.description = description;
    //     grinc.update();

    var grp = new GlideRecord('sys_user_group');
    grp.addQuery('name', groupname);
    grp.query();
    if (!grp.next()) {
        grp.initialize();
        grp.name = groupname;
        grp.description = "Scop : " + scop + " Domain : " + domainname + " Product Name : " + productname;
        grp.insert();
        // this.status = '200';
        // respObj.body = {
        //     "message": "Updation Success!",
        //     "detail": "Incident " + grinc.number + " updated successfully"
        // };
        this.status = '200';
        respObj.body = {
           "OU Name":"OU=Accounts,DC=division-dc1,DC=local","statusMessage":"Successfully created the group.","Name":groupname,"status":"200"
        };
    } else if (grp.next()) { //create incident if  when callerid is not empty

        // grinc.initialize();
        // grinc.caller_id = callerid;
        // grinc.state = state;
        // grinc.category = category;
        // grinc.impact = impact;
        // grinc.urgency = urgency;
        // grinc.short_description = short_description;
        // grinc.description = description;
        // grinc.insert();

        // this.status = '200';
        // respObj.body = {
        //     "message": "Creation Success!",
        //     "detail": "Incident " + grinc.number + " created successfully"
        // };
        this.status = '400';
        respObj.body = {
            "OU Name": "OU=Accounts,DC=division-dc1,DC=local",
            "statusMessage": "Given Group is already Created in Azur.",
            "Name": groupname,
            "status": "401",
        };

    } else { //ignore the creation if there is no caller info
        this.status = '400';
        respObj.body = {
            "message": "Incident Ignored",
            "detail": "Caller email is not received from Request"
        };

    }

    if (this.status == '200') {
        response.setBody(respObj);
        response.setStatus(this.status);
        return response;
    } else {
        var setError = new sn_ws_err.ServiceError(); //this API used to set the custom error messages
        setError.setStatus(this.status);
        setError.setMessage(respObj.body.message);
        setError.setDetail(respObj.body.detail);
        return setError;
    }


})(request, response);]]></operation_script>
        <operation_uri>/api/x_980818_ayanmursh/azuread_ayan/CreateGroup</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/CreateGroup</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>ayan</sys_created_by>
        <sys_created_on>2024-04-16 06:51:38</sys_created_on>
        <sys_id>beb2721a93610210b99e71218bba10f1</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>AzureAdAyan</sys_name>
        <sys_package display_value="AyanMurshad" source="x_980818_ayanmursh">5325a29293210210b99e71218bba1089</sys_package>
        <sys_policy/>
        <sys_scope display_value="AyanMurshad">5325a29293210210b99e71218bba1089</sys_scope>
        <sys_update_name>sys_ws_operation_beb2721a93610210b99e71218bba10f1</sys_update_name>
        <sys_updated_by>ayan</sys_updated_by>
        <sys_updated_on>2024-04-16 07:07:47</sys_updated_on>
        <web_service_definition display_value="AzureAd_ayan">11823ed693610210b99e71218bba10c6</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
